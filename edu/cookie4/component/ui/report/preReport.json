[
    {
        "id": "1",
        "name": "강윤수",
        "etc": "전역의 이름 공간은 최소한도로 줄이는게 좋습니다. 만일 BrandView나 RestaurantView 가 덮어 써질 수도 있기 때문이죠.<br/>그리고 JavaScript에서의 함수의 호출은 상당한 비용이 들며, 함수의 생성 또한 비용이 큽니다.<br/>이 함수들은 호출때마다 함수와 데이터 배열을 생성하고, 실행합니다. 렌더링 함수를 공통으로 빼 뒀으면 더 좋았을 것 같습니다.",
        "score": 7
    },
    {
        "id": "2",
        "name": "이태헌",
        "etc": "전역에 객체 네임스페이스에 이해를 하고 계시네요. 네임스페이스를 두는건 아주 좋은 선택입니다.<br/>하지만 레스토랑과 신발 브랜드를 포함할 상위 네임스페이스를 둔다면 더욱 좋을 것 같습니다.<br/>데이터를 별도 스페이스에 분리해 둔 것도 좋은 방법 같습니다.",
        "score": 8
    },
    {
        "id": "3",
        "name": "이효정",
        "etc": "익명 함수를 사용한 모듈화는 Very Good.<br/>이 방법을 좀 더 발전시키면 CommonJS, AMD (<a href='http://helloworld.naver.com/helloworld/textyle/12864'>참고링크</a>) 표준에 대응하기도 쉽죠.<br/><br/>데이터를 분리하거나 공통 함수를 분리했다면 더욱 훌륭했을 것 같습니다.",
        "score": 8
    },
    {
        "id": "4",
        "name": "김지선",
        "etc": "함수 모듈화 방법은 고전적이지만 소중한 전역의 이름 공간을 낭비하는 경향이 있긴 합니다.<br/>디렉토리 구조를 나눈 것이 눈에 띄네요.<br/><br/>메인 스크립트에 같은 변수 (bv)를 두번 선언한 것은 실수이려나요.",
        "score": 7
    },
    {
        "id": "5",
        "name": "하욱주",
        "etc": "일반적으로 new로 호출될 함수는 생성자라고 불리는데, 이런 생성자 함수는 변수명을 대문자로 하는게 일반적 관례입니다.<br/>생성자 함수는 그냥 호출했을때 굉장한 악영향이 있기 때문이죠",
        "score": 7
    },
    {
        "id": "6",
        "name": "이동호",
        "etc": "생성자 함수를 바로 호출하는 방법을 사용했네요.<br/>이 경우 바로 생성하는 것보다, 메인 함수에서 생성하여 쓰게 하는 방법도 생각해보면 좋을 것 같습니다.",
        "score": 7
    },
    {
        "id": "7",
        "name": "이중석",
        "etc": "배울 시간은 많습니다. 공부할 시간도 충분하구요. 언제든 질문해주세요.",
        "score": 0
    },
    {
        "id": "8",
        "name": "김선영",
        "etc": "메일이 너무 공손해서 놀랬네요.<br/>두가지 방식이 혼재된 것 같은데, 이렇게 구현한 이유가 있는지 궁금합니다.",
        "score": 7
    },
    {
        "id": "9",
        "name": "염수진",
        "etc": "유일하게 메일에 프로필 사진이 걸려있네요. 멋집니다.<br/>객체 리터럴을 사용한 구현이네요. 이 경우 이 방법이 적합한 것 같습니다.<br/>전역 네임스페이스를 고려했다면 더욱 좋은 코드가 나올 것 같습니다.",
        "score": 8
    },
    {
        "id": "10",
        "name": "이성준",
        "etc": "밑밥깔기!..ㅎㅎ<br/>전역의 이름 공간은 최소한도로 줄이는게 좋습니다. 만일 BrandView나 RestaurantView 가 덮어 써질 수도 있기 때문이죠.<br/>그리고 JavaScript에서의 함수의 호출은 상당한 비용이 들며, 함수의 생성 또한 비용이 큽니다.<br/>이 함수들은 호출때마다 함수와 데이터 배열을 생성하고, 실행합니다. 렌더링 함수를 공통으로 빼 뒀으면 더 좋았을 것 같습니다.",
        "score": 7
    },
    {
        "id": "11",
        "name": "김일인",
        "etc": "perfect. 자세한 주석도 감동입니다.<br/>구현을 처음부터  끝까지 혼자 힘으로만 했다면 가르칠게 별로 없을 정도입니다.",
        "score": 10
    },
    {
        "id": "12",
        "name": "진경숙",
        "score": 6
    },
    {
        "id": "13",
        "name": "한강수",
        "score": 8
    },
    {
        "id": "14",
        "name": "천명호",
        "score": 7
    },
    {
        "id": "15",
        "name": "왕언준",
        "etc": "Scope 란?",
        "score": 9
    },
    {
        "id": "16",
        "name": "김규원",
        "etc": "변수의 선언과 할당의 차이는",
        "score": 8
    },
    {
        "id": "17",
        "name": "김성진",
        "score": 9
    },
    {
        "id": "18",
        "name": "김준형",
        "score": 7
    },
    {
        "id": "19",
        "name": "김석홍",
        "score": 7
    },
    {
        "id": "20",
        "name": "안상희",
        "etc": "재미있다고 하니 좋네요!",
        "score": 7
    },
    {
        "id": "21-1",
        "name": "신동욱-1",
        "etc": "객체 리터럴과 JSON 의 차이는 뭘까요",
        "score": 9
    },
    {
        "id": "21-2",
        "name": "신동욱-2",
        "etc": "prototype을 사용했을 때와 함수 내부의 this를 사용했을때 어떤 차이가 있을까요?",
        "score": 9
    },
    {
        "id": "21-3",
        "name": "신동욱-3",
        "etc": "싱글톤의 정의..?",
        "score": 7
    },
    {
        "id": "22",
        "name": "이상희",
        "etc": "최소 수정과 가독성이 좋다",
        "score": 7
    },
    {
        "id": "23",
        "name": "양혜숙",
        "etc": "주석이 조금이라도 있었으면...",
        "score": 7
    },
    {
        "id": "24",
        "name": "최연(성?)호",
        "score": 7
    },
    {
        "id": "25",
        "name": "박규철",
        "etc": "무난무난...",
        "score": 8
    },
    {
        "id": "26",
        "name": "김혜민",
        "etc": "Style~",
        "score": 9.5
    },
    {
        "id": "27",
        "name": "신지연",
        "etc": "Class 와 모듈화에 대해 좀더 생각해보자.",
        "score": 7
    },
    {
        "id": "28",
        "name": "홍준혁",
        "etc": "익명 함수와 객체 리터럴이란",
        "score": 8
    },
    {
        "id": "29",
        "name": "구교진",
        "etc": "노력한 흔적이 보인다",
        "score": 7
    },
    {
        "id": "30",
        "name": "이한결",
        "etc": "차별화된 애니메이션, 다만 함수의 생성자 패턴은 대문자로 시작하는게 일반적 관례.",
        "score": 7
    },
    {
        "id": "31",
        "name": "유제현",
        "etc": "무난합니다.",
        "score": 7
    },
    {
        "id": "32",
        "name": "홍지오",
        "etc": "익명 함수가 기명 함수에 비해 얻는 이점은 무엇일까요.<br/>변수를 선언하여 불필요한 스코프 생성을 막아 추후 덮어써지는 등의 이름 충돌을 막을 수 있기 때문이죠.",
        "score": 7
    },
    {
        "id": "33",
        "name": "이웅기",
        "etc": "객체 리터럴에 대한 정의를 좀더 자세히 내려봅시다",
        "score": 7
    }
]